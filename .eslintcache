[{"C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\index.js":"1","C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\App.js":"2","C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\splashScreen.js":"3","C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\userAuth.js":"4","C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\userSignUp.js":"5","C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\UserSignUp.js":"6","C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\SplashScreen.js":"7","C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\UserAuth.js":"8"},{"size":598,"mtime":1610097362645,"results":"9","hashOfConfig":"10"},{"size":549,"mtime":1610113532220,"results":"11","hashOfConfig":"10"},{"size":1045,"mtime":1610113524690,"results":"12","hashOfConfig":"10"},{"size":262,"mtime":1610113532220,"results":"13","hashOfConfig":"10"},{"size":3104,"mtime":1610113431392,"results":"14","hashOfConfig":"10"},{"size":4930,"mtime":1610119865353,"results":"15","hashOfConfig":"10"},{"size":1305,"mtime":1610119865390,"results":"16","hashOfConfig":"10"},{"size":3362,"mtime":1610119865259,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"oua5e2",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"21"},"C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\index.js",["40"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["41","42"],"C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\App.js",["43"],"import React from \"react\";\nimport \"./App.css\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport Splash from \"./Pages/SplashScreen\";\nimport UserAuth from \"./Pages/UserAuth\";\nimport UserSignUp from \"./Pages/UserSignUp\";\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Splash} />\n        <Route path=\"/login\" component={UserAuth} />\n        <Route path=\"/register\" component={UserSignUp} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\splashScreen.js",["44"],"C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\userAuth.js",["45"],"C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\userSignUp.js",["46","47","48"],"C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\UserSignUp.js",["49","50","51"],"import React, { Component } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport guild_logo from \"../Assets/guild_logo.svg\";\r\n\r\nexport default function UserSignUp() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  return (\r\n    <div\r\n      style={{ height: \"100vh\", alignItems: \"center\", display: \"inline-flex\" }}\r\n      className=\"w-100 crunch-orange-bg\"\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              padding: \"0px\",\r\n              justifyContent: \"center\",\r\n              display: \"inline-flex\",\r\n            }}\r\n            xs={12}\r\n          >\r\n            <a className=\"home-link\" href=\"/\">\r\n              <img\r\n                alt=\"guild-logo\"\r\n                style={{ height: \"150px\" }}\r\n                className=\"img-fluid\"\r\n                src={guild_logo}\r\n              />\r\n            </a>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <div className=\"my-3 text-center w-100 text-uppercase crunch-red-text\">\r\n              <span style={{ fontSize: \"24px\" }}>sign up / </span>\r\n              <span style={{ textDecoration: \"underline\", fontSize: \"24px\" }}>\r\n                <Link className=\"crunch-red-text\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <div>\r\n              <form className=\"guild-form\">\r\n                <div className=\"form-group\">\r\n                  <label for=\"username\">Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    id=\"username\"\r\n                    ref={register({ required: true })}\r\n                    className=\"form form-control\"\r\n                    placeholder=\"Enter Username\"\r\n                  />\r\n                  {errors.username && (\r\n                    <p className=\"error\">Username is required</p>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    ref={register({ required: true })}\r\n                    className=\"form form-control\"\r\n                    placeholder=\"Enter Email address\"\r\n                  />\r\n                  {errors.email && <p className=\"error\">Email is required</p>}\r\n                  <small className=\"form-text crunch-red-text\">\r\n                    Email would be used to send promotional content, we will not\r\n                    share your email\r\n                  </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"password\">Password</label>\r\n                  <input\r\n                    style={{ borderRadius: \"0px\" }}\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    ref={register({ required: true, minLength: 8 })}\r\n                    className=\"form form-control\"\r\n                    placeholder=\"Enter Password\"\r\n                  />\r\n                  {errors.password && errors.password.required && (\r\n                    <p className=\"error\">Password is required</p>\r\n                  )}\r\n                  {errors.password && errors.password.minLength && (\r\n                    <p className=\"error\">Password is too short</p>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"cpassword\">Confirm Password</label>\r\n                  <input\r\n                    style={{ borderRadius: \"0px\" }}\r\n                    id=\"cpassword\"\r\n                    type=\"password\"\r\n                    name=\"cpassword\"\r\n                    ref={register({ required: true, minLength: 8 })}\r\n                    className=\"form form-control\"\r\n                    placeholder=\"Confirm Password\"\r\n                  />\r\n                  {errors.cpassword && errors.password.required && (\r\n                    <p className=\"error\">Password is required</p>\r\n                  )}\r\n                  {errors.cpassword && errors.password.minLength && (\r\n                    <p className=\"error\">Password is too short</p>\r\n                  )}\r\n                </div>\r\n                <div style={{ textAlign: \"center\" }} className=\"w-100\">\r\n                  <button\r\n                    style={{ border: \"none\" }}\r\n                    className=\"crunch-btn click\"\r\n                  >\r\n                    <span className=\"center\">Sign Up</span>\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n",["52","53"],"C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\SplashScreen.js",[],"C:\\Users\\Training\\Documents\\Guild\\guild-frontend\\guild-frontend\\src\\Pages\\UserAuth.js",["54","55","56"],"import React, { Component } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport guild_logo from \"../Assets/guild_logo.svg\";\r\n\r\nexport default function UserAuth() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  return (\r\n    <div\r\n      style={{ height: \"100vh\", alignItems: \"center\", display: \"inline-flex\" }}\r\n      className=\"w-100 crunch-orange-bg\"\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              padding: \"0px\",\r\n              justifyContent: \"center\",\r\n              display: \"inline-flex\",\r\n            }}\r\n            xs={12}\r\n          >\r\n            <a className=\"home-link\" href=\"/\">\r\n              <img\r\n                alt=\"guild-logo\"\r\n                style={{ height: \"150px\" }}\r\n                className=\"img-fluid\"\r\n                src={guild_logo}\r\n              />\r\n            </a>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <div className=\"my-3 text-center w-100 text-uppercase crunch-red-text\">\r\n              <span style={{ fontSize: \"24px\" }}>Login / </span>\r\n              <span style={{ textDecoration: \"underline\", fontSize: \"24px\" }}>\r\n                <Link className=\"crunch-red-text\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <div>\r\n              <form className=\"guild-form\">\r\n                <div className=\"form-group\">\r\n                  <label for=\"username\">Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    id=\"username\"\r\n                    ref={register({ required: true })}\r\n                    className=\"form form-control\"\r\n                    placeholder=\"Enter Username\"\r\n                  />\r\n                  {errors.username && (\r\n                    <p className=\"error\">Username is required</p>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"password\">Password</label>\r\n                  <input\r\n                    style={{ borderRadius: \"0px\" }}\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    ref={register({ required: true, minLength: 8 })}\r\n                    className=\"form form-control\"\r\n                    placeholder=\"Enter Password\"\r\n                  />\r\n                  {errors.password && errors.password.required && (\r\n                    <p className=\"error\">Password is required</p>\r\n                  )}\r\n                  {errors.password && errors.password.minLength && (\r\n                    <p className=\"error\">Password is too short</p>\r\n                  )}\r\n                </div>\r\n                <div style={{ textAlign: \"center\" }} className=\"w-100\">\r\n                  <button\r\n                    style={{ border: \"none\" }}\r\n                    className=\"crunch-btn click\"\r\n                  >\r\n                    <span className=\"center\">LOGIN</span>\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"57","severity":1,"message":"58","line":4,"column":9,"nodeType":"59","messageId":"60","endLine":4,"endColumn":19},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"57","severity":1,"message":"65","line":7,"column":3,"nodeType":"59","messageId":"60","endLine":7,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":12,"column":21,"nodeType":"68","endLine":12,"endColumn":67},{"ruleId":"57","severity":1,"message":"69","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"69","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"67","line":23,"column":13,"nodeType":"68","endLine":23,"endColumn":59},{"ruleId":"70","severity":2,"message":"71","line":32,"column":44,"nodeType":"59","messageId":"72","endLine":32,"endColumn":52},{"ruleId":"57","severity":1,"message":"69","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"73","line":8,"column":21,"nodeType":"59","messageId":"60","endLine":8,"endColumn":33},{"ruleId":"66","severity":1,"message":"67","line":25,"column":15,"nodeType":"68","endLine":29,"endColumn":17},{"ruleId":"61","replacedBy":"74"},{"ruleId":"63","replacedBy":"75"},{"ruleId":"57","severity":1,"message":"69","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"73","line":8,"column":21,"nodeType":"59","messageId":"60","endLine":8,"endColumn":33},{"ruleId":"66","severity":1,"message":"67","line":25,"column":15,"nodeType":"68","endLine":29,"endColumn":17},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","no-undef","'onSubmit' is not defined.","undef","'handleSubmit' is assigned a value but never used.",["76"],["77"],"no-global-assign","no-unsafe-negation"]